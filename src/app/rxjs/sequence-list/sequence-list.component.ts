import { Component, OnInit, OnDestroy } from '@angular/core';
import { FibonacciService } from '../shared/services/fibonacci/fibonacci.service';
import { Subscription } from 'rxjs';
import { NGXLogger } from 'ngx-logger';

/**
 * The sequence list component displays the full sequence of fibonacci numbers that have been generated by
 * the fibonacci services.
 */
@Component({
  selector: 'app-sequence-list',
  templateUrl: './sequence-list.component.html',
  styleUrls: ['./sequence-list.component.scss']
})
export class SequenceListComponent implements OnInit, OnDestroy {
  // We keep track of this subscription so we can unsubscribe from it onDestroy. This is good practice to avoid memory leaks.
  subscription: Subscription;
  sequence = [];

  constructor(private fibonacci: FibonacciService, private logger: NGXLogger) {}

  /* istanbul ignore next */
  ngOnInit(): void {
    this.subscription = this.fibonacci.sequence.subscribe(
      num => {
        this.sequence.push(num);
      },
      err => {
        this.logger.warn('RxjsModule.SequenceListComponent.subscription: Error has occured', err);
      }
    );
  }

  /* istanbul ignore next */
  ngOnDestroy(): void {
    // We unsubscribe to the subscription on destroy to prevent memory leaks
    this.subscription.unsubscribe();
  }
}
